name: Run lighthouse CI When Push
on: [push]
jobs:
  lhci:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    env:
      working-directory: ./client

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16'

      - name: Install packages
        run: npm ci && npm install -g @lhci/cli@0.8.x
        working-directory: ${{ env.working-directory }}
      - name: Build
        run: npm run build
        working-directory: ${{ env.working-directory }}
      - name: Run Lighthouse CI
        run: lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        working-directory: ${{ env.working-directory }}

      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |

            const fs = require('fs');
            const results = JSON.parse(fs.readFileSync("./client/lhci_reports/manifest.json"));
            let comments = "";

            results.forEach((result) => {
              const { summary, jsonPath } = result;
              const { audits } = JSON.parse(fs.readFileSync(jsonPath));
              const formatResult = (res) => Math.round(res * 100);

              Object.keys(summary).forEach(
                (key) => (summary[key] = formatResult(summary[key]))
              );

              const score = (res) => (res >= 90 ? "üü¢" : res >= 80 ? "üü†" : "üî¥");

              const comment = [
                `‚ö°Ô∏è Lighthouse report!`,
                `| Category | Score |`,
                `| --- | --- |`,
                `| ${score(summary.performance)} Performance | ${summary.performance} |`,
                `| ${score(summary.accessibility)} Accessibility | ${summary.accessibility} |`,
                `| ${score(summary["best-practices"])} Best Practices | ${summary["best-practices"]} |`,
                `| ${score(summary.seo)} SEO | ${summary.seo} |`,
                `| ${score(summary.pwa)} PWA | ${summary.pwa} |`,
              ].join("\n");
              comments += comment + "\n";
            });
            core.setOutput('comment', comments)

      - name: comment PR
        uses: unsplash/comment-on-pr@v1.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: ${{ steps.format_lighthouse_score.outputs.comments}}
